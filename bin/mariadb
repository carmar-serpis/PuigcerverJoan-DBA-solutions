#!/bin/bash
VERBOSE=1
if tty -s ; then
    VERBOSE=1
else
    VERBOSE=0
fi

ARGS=""
CONTAINER="mariadb"

while [ $# -ge 1 ] ; do

    case $1 in
        --container)
            CONTAINER=$2
            shift
            ;;
        *)
            ARGS="$ARGS $1"
            ;;
    esac
    shift
done

if [ ! "$(docker ps -q -f name=$CONTAINER)" ]; then
    if [ $VERBOSE -gt 0 ]; then
        echo Starting $CONTAINER ...
    fi
    docker run -d --name $CONTAINER \
        -e MYSQL_ROOT_PASSWORD=1234 \
        --health-cmd='mysql -uroot -p1234' --health-interval=2s \
        mariadb:latest >/dev/null

else
    if [ $VERBOSE -gt 0 ]; then
        echo $CONTAINER already running!
    fi
fi

# Check health
# f" --health-cmd=\'mysql -u{self.user} -p{self.password}\' --health-interval=2s"
if [ $VERBOSE -gt 0 ]; then
    echo -n "Cheeking $CONTAINER health... "
fi
HEALTH_COMMAND="docker inspect -f {{.State.Health.Status}} $CONTAINER"
HEALTH=`$HEALTH_COMMAND`
until [ $HEALTH = "healthy" ] ; do
    sleep 2
    HEALTH=`$HEALTH_COMMAND`
    if [ $VERBOSE -gt 0 ]; then
        echo -n ${HEALTH::1}
    fi
done
if [ $VERBOSE -gt 0 ]; then
    echo " OK"
fi


# COMMAND="mysql -h $IP -uroot -p1234"
# 
# DOCKER_USER="ps -o user -C dockerd --no-headers"
# if [ $DOCKER_USER = "root" ]; then
#     IP=`docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $CONTAINER`
# elif [ $DOCKER_USER = $(whoami) ]; then
#     # Rootless mode
#     NSENTER="nsenter -U --preserve-credentials -n -t $(cat $XDG_RUNTIME_DIR/docker.pid)"
#     IP=`docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $CONTAINER`
# fi

if tty -s ; then
    COMMAND="docker exec -it mariadb mysql -uroot -p1234"
    $COMMAND $ARGS
else
    COMMAND="docker exec -i mariadb mysql -uroot -p1234"
    $COMMAND $ARGS <&0
fi
